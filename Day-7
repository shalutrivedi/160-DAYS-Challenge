class Solution {
  public:
    int search(vector<int>& arr, int key) {
        int n = arr.size();
        int low = 0, high = n - 1;

        while (low <= high) {
            int mid = low + (high - low) / 2;
            if (arr[mid] == key) {
                return mid;
            }
            if (arr[low] <= arr[mid]) { // Left part is sorted
                if (key >= arr[low] && key < arr[mid]) {
                    high = mid - 1; // Key lies in the left part
                } else {
                    low = mid + 1; // Key lies in the right part
                }
            } else { // Right part is sorted
                if (key > arr[mid] && key <= arr[high]) {
                    low = mid + 1; // Key lies in the right part
                } else {
                    high = mid - 1; // Key lies in the left part
                }
            }
        }

        return -1;
    }
};
